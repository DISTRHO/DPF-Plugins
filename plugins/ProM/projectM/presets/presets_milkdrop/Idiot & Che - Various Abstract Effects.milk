[preset00]
fRating=1.000000
fGammaAdj=1.000000
fDecay=0.970000
fVideoEchoZoom=1.000499
fVideoEchoAlpha=0.500000
nVideoEchoOrientation=3
nWaveMode=1
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=1.000416
fWaveScale=1.000404
fWaveSmoothing=0.000000
fWaveParam=-0.720000
fModWaveAlphaStart=1.000000
fModWaveAlphaEnd=1.000000
fWarpAnimSpeed=1.000000
fWarpScale=1.000000
fZoomExponent=0.010000
fShader=0.000000
zoom=1.000198
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.010000
sx=1.000000
sy=1.000000
wave_r=0.500000
wave_g=0.500000
wave_b=0.500000
wave_x=0.600000
wave_y=0.700000
ob_size=0.005000
ob_r=1.000000
ob_g=0.000000
ob_b=0.000000
ob_a=0.100000
ib_size=0.000000
ib_r=0.250000
ib_g=0.250000
ib_b=0.250000
ib_a=1.000000
nMotionVectorsX=20.223999
nMotionVectorsY=10.656000
mv_dx=0.000000
mv_dy=0.000000
mv_l=2.200000
mv_r=0.900000
mv_g=0.500000
mv_b=0.000000
mv_a=0.000000
per_frame_1=// timed sidon sensor
per_frame_2=// le = signal level; desired average value = 2
per_frame_3=le=1.4*bass_att+.1*bass+.5*treb;
per_frame_4=pulse=above(le,th);
per_frame_5=// pulsefreq = running average of interval between last 5 pulses
per_frame_6=pulsefreq=if(equal(pulsefreq,0),2,
per_frame_7=if(pulse,.8*pulsefreq+.2*(time-lastpulse),pulsefreq));
per_frame_8=lastpulse=if(pulse,time,lastpulse);
per_frame_9=// bt = relative time; 0 = prev beat; 1 = expected beat
per_frame_10=bt=(time-lastbeat)/(.5*beatfreq+.5*pulsefreq);
per_frame_11=// hccp = handcicap for th driven by bt
per_frame_12=hccp=(.03/(bt+.2))+.5*if(band(above(bt,.8),below(bt,1.2)),
per_frame_13=(pow(sin((bt-1)*7.854),4)-1),0);
per_frame_14=beat=band(above(le,th+hccp),btblock);
per_frame_15=btblock=1-above(le,th+hccp);
per_frame_16=lastbeat=if(beat,time,lastbeat);
per_frame_17=beatfreq=if(equal(beatfreq,0),2,
per_frame_18=if(beat,.8*beatfreq+.2*(time-lastbeat),beatfreq));
per_frame_19=// th = threshold
per_frame_20=th=if(above(le,th),le+114/(le+10)-7.407,
per_frame_21=th+th*.07/(th-12)+below(th,2.7)*.1*(2.7-th));
per_frame_22=th=if(above(th,6),6,th);
per_frame_23=
per_frame_24=wave_r=.5*sqr(sin(time*3.7))+.5*sin(37*ccl+.01*leccl);
per_frame_25=wave_g=.5*sqr(sin(time*2.8))+.5*sin(38*ccl+.01*leccl);
per_frame_26=wave_b=.5*sqr(sin(time*3.2))+.5*sin(36*ccl+.01*leccl);
per_frame_27=wave_x=.5+.1*sin(leccl+frame);
per_frame_28=wave_y=.5+.1*sin(1.2*leccl+frame+1.17);
per_frame_29=
per_frame_30=ccl=ccl+beat;
per_frame_31=q1=ccl;
per_frame_32=leccl=leccl+bass+treb;
per_frame_33=q2=.001*leccl;
per_frame_34=q3=th;
per_frame_35=
per_frame_36=ob_r=wave_R;
per_frame_37=ob_b=wave_b;
per_frame_38=ob_g=wave_G;
per_pixel_1=sector=(ang+rot+x+y)*5000+q1+10*sin(q2);
per_pixel_2=orient=sector%4;
per_pixel_3=spd=.005*q3;
per_pixel_4=quadrant=above(x,.5)*2+above(y,.5-x);
per_pixel_5=
per_pixel_6=// variant movement
per_pixel_7=dx=dx+equal(quadrant,q1%4)*if(below(orient,2),-spd,spd);
per_pixel_8=dy=dx+equal(quadrant,q1%4)*if(orient%2,-spd,spd);
per_pixel_9=
per_pixel_10=// pulsed zoom
per_pixel_11=zoom = 1+equal(quadrant,(q1+1)%4-x*5*sin(100*q2+10*sign(sin(20*q1))*rad));
per_pixel_12=
per_pixel_13=// weird warp
per_pixel_14=dx=dx+equal(quadrant,(q1+3)%4)*spd*sin((20+14*sin(18*q2))*x
per_pixel_15=+(15+10*sin(19*q2))*y+sin(1.8*q2)*q1)*Rad*sin(q1);
per_pixel_16=dy=dy+equal(quadrant,(q1+3)%4)*spd*sin((20+14*sin(18.5*q2))*x
per_pixel_17=+(15+10*sin(19.5*q2))*y+sin(1.7*q2)*q1)*Rad*sin(q1);
per_pixel_18=
per_pixel_19=// ccl driven stretch fx
per_pixel_20=sx=1+equal(quadrant,(q1+2)%4)*.1*sin(53*q1+10*q2+4*ang);
per_pixel_21=sy=1+equal(quadrant,(q1+2)%4)*.1*sin(32*q1+10*q2+4*ang);
per_pixel_22=rot=equal(quadrant,(q1+2)%4)*.05*sin(27*q1+10*q2);
per_pixel_23=
per_pixel_24=// structures
per_pixel_25=structure=equal(quadrant,(21.7*q1)%4)*above(sector%6,2)-q1*rad;
per_pixel_26=
per_pixel_27=dx=if(structure,5*-dx,dx);
per_pixel_28=dy=if(structure,5*-dy,dy);;
per_pixel_29=rot=if(structure,5*-rot-rad*rad,rad*rad);
per_pixel_30=zoom=if(structure,5*-zoom+6,zoom);
per_pixel_31=
per_pixel_32=sx=sx+.3*Sin(x)*sin(q3);
per_pixel_33=sy=sy-.3*sin(y)*sin(q1);
