MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=4.000000
fGammaAdj=1.780
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.110
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=4.950
mv_r=0.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=0.700
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.100
wave_0_per_point1=//q1 = state;
wave_0_per_point2=//q2 = basstime;
wave_0_per_point3=
wave_0_per_point4=q1 = 0;
wave_0_per_point5=speed = bass_att*0.3;
wave_0_per_point6=v = sample*10000 + value2*bass*0.1;
wave_0_per_point7=
wave_0_per_point8=//state 0 elipse
wave_0_per_point9=xs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);
wave_0_per_point10=ys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);
wave_0_per_point11=
wave_0_per_point12=x = 0.5 + 0.5*sin(xs*0.1)*cos(time*1 + ys);
wave_0_per_point13=y = 0.5 + 0.5*sin(ys*0.1)*cos(time*1.1 + xs);
wave_0_per_point14=
wave_0_per_point15=
wave_0_per_point16=r = 0.5 + 0.5*sin(q1*0.22);
wave_0_per_point17=g = 0.5 + 0.5*sin(q1*0.307) + x;
wave_0_per_point18=//b = 0.4 + 0.4*sin(time*0.959);
wave_0_per_point19=
wave_0_per_point20=
wave_0_per_point21=xs = if(above(xs,1000),0 ,xs);
wave_0_per_point22=ys = if(above(ys,1000),0 ,ys);
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=//apply zoom burst on beat
wave_3_per_point2=flag = above(q3,2);
wave_3_per_point3=//state zero is ready state
wave_3_per_point4=state = state + flag*equal(state,0);
wave_3_per_point5=
wave_3_per_point6=//upwards flight
wave_3_per_point7=yval = if(equal(state,0),0, yval);
wave_3_per_point8=yval = yval + 0.00004*equal(state,1);
wave_3_per_point9=ymax = if(equal(state,0),int(rand(100))*0.004,ymax);
wave_3_per_point10=
wave_3_per_point11=//hit apogee
wave_3_per_point12=state = if(above(yval,0.5+ymax),2,state);
wave_3_per_point13=
wave_3_per_point14=//reset variable
wave_3_per_point15=yval = if(equal(state,0),0, yval);
wave_3_per_point16=burst = if(equal(state,0),0.001,burst);
wave_3_per_point17=alphax = if(equal(state,0),1,alphax);
wave_3_per_point18=xdriftinc = if(equal(state,0),0,xdriftinc);
wave_3_per_point19=
wave_3_per_point20=burstspeed = if(equal(state,0),int(rand(10)),burstspeed);
wave_3_per_point21=xdrift = if(equal(state,0),int(rand(20)),xdrift);
wave_3_per_point22=//to get the numbers small enough have to use constants
wave_3_per_point23=xdriftinc = xdriftinc
wave_3_per_point24=+ equal(xdrift,0)*equal(state,1)*0.00002
wave_3_per_point25=+ equal(xdrift,1)*equal(state,1)*0.000018
wave_3_per_point26=+ equal(xdrift,2)*equal(state,1)*0.000016
wave_3_per_point27=+ equal(xdrift,3)*equal(state,1)*0.000014
wave_3_per_point28=+ equal(xdrift,4)*equal(state,1)*0.000012
wave_3_per_point29=+ equal(xdrift,5)*equal(state,1)*0.00001
wave_3_per_point30=+ equal(xdrift,6)*equal(state,1)*0.000008
wave_3_per_point31=+ equal(xdrift,7)*equal(state,1)*0.000006
wave_3_per_point32=+ equal(xdrift,8)*equal(state,1)*0.000004
wave_3_per_point33=+ equal(xdrift,9)*equal(state,1)*0.000002
wave_3_per_point34=+ equal(xdrift,11)*equal(state,1)*-0.000002
wave_3_per_point35=+ equal(xdrift,12)*equal(state,1)*-0.000004
wave_3_per_point36=+ equal(xdrift,13)*equal(state,1)*-0.000006
wave_3_per_point37=+ equal(xdrift,14)*equal(state,1)*-0.000008
wave_3_per_point38=+ equal(xdrift,15)*equal(state,1)*-0.00001
wave_3_per_point39=+ equal(xdrift,16)*equal(state,1)*-0.000012
wave_3_per_point40=+ equal(xdrift,17)*equal(state,1)*-0.000014
wave_3_per_point41=+ equal(xdrift,18)*equal(state,1)*-0.000016
wave_3_per_point42=+ equal(xdrift,19)*equal(state,1)*-0.000018;
wave_3_per_point43=
wave_3_per_point44=burst = burst
wave_3_per_point45=+ equal(burstspeed,0)*equal(state,2)*0.000024
wave_3_per_point46=+ equal(burstspeed,1)*equal(state,2)*0.000022
wave_3_per_point47=+ equal(burstspeed,2)*equal(state,2)*0.00002
wave_3_per_point48=+ equal(burstspeed,3)*equal(state,2)*0.000018
wave_3_per_point49=+ equal(burstspeed,4)*equal(state,2)*0.000016
wave_3_per_point50=+ equal(burstspeed,5)*equal(state,2)*0.000014
wave_3_per_point51=+ equal(burstspeed,6)*equal(state,2)*0.000012
wave_3_per_point52=+ equal(burstspeed,7)*equal(state,2)*0.00001
wave_3_per_point53=+ equal(burstspeed,8)*equal(state,2)*0.000008
wave_3_per_point54=+ equal(burstspeed,9)*equal(state,2)*0.000008;
wave_3_per_point55=
wave_3_per_point56=alphax = alphax - 0.00004*equal(state,2);
wave_3_per_point57=state = if(below(alphax,0),0,state);
wave_3_per_point58=
wave_3_per_point59=
wave_3_per_point60=s = sample*3.14*100;
wave_3_per_point61=ss = sample*6.28*1000;
wave_3_per_point62=
wave_3_per_point63=//draw torus
wave_3_per_point64=xs = (burst + 0.0001*cos(s))*cos(ss);
wave_3_per_point65=ys = (burst + 0.0001*cos(s))*sin(ss);
wave_3_per_point66=zs = 0.1*burst*sin(s);
wave_3_per_point67=
wave_3_per_point68=
wave_3_per_point69=//rotate x axis
wave_3_per_point70=angle = sin(-q1*0.035)*6.28;
wave_3_per_point71=yx = ys*cos(angle) - zs*sin(angle);
wave_3_per_point72=zx = ys*sin(angle) + zs*cos(angle);
wave_3_per_point73=xx = xs;
wave_3_per_point74=
wave_3_per_point75=//rotate y axis
wave_3_per_point76=angle2 = sin(-q1*0.03)*6.28;
wave_3_per_point77=xd = xx*cos(angle2) - zx*sin(angle2);
wave_3_per_point78=zd = xx*sin(angle2) + zx*cos(angle2);
wave_3_per_point79=yd = yx;
wave_3_per_point80=
wave_3_per_point81=//rotaye z axis
wave_3_per_point82=angle3 = sin(-q1*0.022)*6.28;
wave_3_per_point83=xn = xd*cos(angle3) - yd*sin(angle3);
wave_3_per_point84=yn = xd*sin(angle3) + yd*cos(angle3);
wave_3_per_point85=
wave_3_per_point86=zd = zd + 2;
wave_3_per_point87=
wave_3_per_point88=x = xn*zd*0.3 + 0.5;
wave_3_per_point89=y = yn*zd*0.3*1.2;
wave_3_per_point90=
wave_3_per_point91=
wave_3_per_point92=x = x + xdriftinc;
wave_3_per_point93=y = y + sin(yval*1.5) - 0.18;
wave_3_per_point94=
wave_3_per_point95=
wave_3_per_point96=r = 0.5 + 0.5*sin(q1*1.3 + x + x);
wave_3_per_point97=g = 0.5 + 0.5*sin(q1*1.1 + x + y);
wave_3_per_point98=b = 0.5 + 0.5*sin(q1*1.66 + y + y);
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=2.66718
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.45112
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=0.000
shapecode_0_a=0.150
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.050
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.350
shapecode_1_y=0.000
shapecode_1_rad=0.09959
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.42497
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.000
shapecode_2_rad=0.10201
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.650
shapecode_3_y=0.000
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=p1 = int(rand(16));
per_frame_init_2=p2 = p1;
per_frame_1=dec_med = pow (0.96, 30/fps);
per_frame_2=dec_slow = pow (0.99, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, .4+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %8;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%4;
per_frame_10=index3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;
per_frame_11=
per_frame_12=
per_frame_13=q20 = avg;
per_frame_14=q21 = beat;
per_frame_15=q22 = peak;
per_frame_16=q23 = index;
per_frame_17=q24 = is_beat;
per_frame_18=q26 = bass + mid + treb;
per_frame_19=
per_frame_20=//k1 =  is_beat*bnot(index)*bnot(index2);
per_frame_21=
per_frame_22=k1 =  is_beat*equal(index,0);
per_frame_23=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_24=p2 = dec_med * p2+ (1-dec_med)*p1;
per_frame_25=rott = p2 * 3.14159265359/4;
per_frame_26=
per_frame_27=q27 = 8-index;
per_frame_28=q28 = sin(time/7);
per_frame_29=q29 = index4;
per_frame_30=
per_frame_31=q1 = cos(rott);
per_frame_32=q2 = sin(rott);
per_frame_33=q3 = -q2;
per_frame_34=q4 = q1;
per_frame_35=
per_frame_36=mv_a = .5 * q1;
per_frame_37=
per_frame_38=movez = movez + .01 * 30/fps ;
per_frame_39=q29 = movez;
per_frame_40=
per_frame_41=movex = movex + .003 * 30/fps *q2;
per_frame_42=q30 = movex;
per_frame_43=
per_frame_44=q31 = sqr(sin(time/17));
per_frame_45=q32 = sqr(cos(time/17));
per_frame_46=
per_frame_47=zoom = 1.0;
per_frame_48=rot = .0;
per_frame_49=dx = .0;
per_frame_50=warp = .2;
warp_1=`shader_body {
warp_2=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_3=`float2 uv1 = float2(uv.x-0.5,uv.y-0.5);//*aspect.xy;
warp_4=`
warp_5=`
warp_6=`float2 zz = uv1 *texsize.xy *.01;
warp_7=`zz =mul(zz,float2x2(_qa));
warp_8=`zz = -zz.yx;
warp_9=`float2 h1 = clamp(tan(zz.yx),-8,8) * cos(4*zz);
warp_10=`
warp_11=`uv += h1*texsize.zw * 16;
warp_12=`float3 crisp = tex2D(sampler_main,uv);
warp_13=`
warp_14=`ret = crisp*.99-.01;
warp_15=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float srad = sqrt(rad)+ 0.05;
comp_4=`    ret = tex2D(sampler_main, uv).xyz;
comp_5=`    ret = max(ret, tex2D(sampler_main, uv + 0.06*float2(cos(uv.y*27*0.5),sin(uv.x*39*0.5))).xyz);
comp_6=`}
