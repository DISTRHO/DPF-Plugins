[preset00]
fRating=3.000000
fGammaAdj=1.000000
fDecay=1.000000
fVideoEchoZoom=1.000499
fVideoEchoAlpha=0.000000
nVideoEchoOrientation=0
nWaveMode=3
bAdditiveWaves=0
bWaveDots=1
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=1.000416
fWaveScale=0.671923
fWaveSmoothing=0.450000
fWaveParam=0.000000
fModWaveAlphaStart=0.200000
fModWaveAlphaEnd=0.600000
fWarpAnimSpeed=1.000000
fWarpScale=1.000000
fZoomExponent=1.000158
fShader=0.000000
zoom=1.000223
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.000000
sx=0.999999
sy=0.999999
wave_r=0.500000
wave_g=0.500000
wave_b=0.500000
wave_x=0.500000
wave_y=0.500000
ob_size=0.005000
ob_r=0.000000
ob_g=0.600000
ob_b=0.000000
ob_a=1.000000
ib_size=0.005000
ib_r=0.250000
ib_g=0.250000
ib_b=0.250000
ib_a=1.000000
nMotionVectorsX=20.223999
nMotionVectorsY=20.255999
mv_dx=0.000000
mv_dy=0.000000
mv_l=2.200000
mv_r=0.900000
mv_g=0.500000
mv_b=0.000000
mv_a=0.000000
per_frame_1=// timed sidon sensor
per_frame_2=// le = signal level; desired average value = 2
per_frame_3=le=1.4*bass_att+.1*bass+.5*treb;
per_frame_4=pulse=above(le,th);
per_frame_5=// pulsefreq = running average of interval between last 5 pulses
per_frame_6=pulsefreq=if(equal(pulsefreq,0),2,
per_frame_7=if(pulse,.8*pulsefreq+.2*(time-lastpulse),pulsefreq));
per_frame_8=lastpulse=if(pulse,time,lastpulse);
per_frame_9=// bt = relative time; 0 = prev beat; 1 = expected beat
per_frame_10=bt=(time-lastbeat)/(.5*beatfreq+.5*pulsefreq);
per_frame_11=// hccp = handcicap for th driven by bt
per_frame_12=hccp=(.03/(bt+.2))+.5*if(band(above(bt,.8),below(bt,1.2)),
per_frame_13=(pow(sin((bt-1)*7.854),4)-1),0);
per_frame_14=beat=band(above(le,th+hccp),btblock);
per_frame_15=btblock=1-above(le,th+hccp);
per_frame_16=lastbeat=if(beat,time,lastbeat);
per_frame_17=beatfreq=if(equal(beatfreq,0),2,
per_frame_18=if(beat,.8*beatfreq+.2*(time-lastbeat),beatfreq));
per_frame_19=// th = threshold
per_frame_20=th=if(above(le,th),le+114/(le+10)-7.407,
per_frame_21=th+th*.07/(th-12)+below(th,2.7)*.1*(2.7-th));
per_frame_22=th=if(above(th,6),6,th);
per_frame_23=thccl=thccl+(th-2.5144);
per_frame_24=
per_frame_25=cc=cc+beat;
per_frame_26=q1=cc;
per_frame_27=ib_a=if(equal((3*sin(cc))%2,0),.3+.3*sin(.01*thccl),0);
per_frame_28=//zoom=.98+.02*sin(12*cc);
per_frame_29=//zoomexp=1+.3*sin(26*cc);
per_frame_30=//sx=1+.01*sin(11*cc);
per_frame_31=//sy=1+.01*sin(14*cc);
per_frame_32=wave_x=.5+.4*sin((.02+.005*sin(.003*time))*thccl)+.05*sin(8*time);
per_frame_33=wave_y=.5+.4*sin((.017+.005*sin(.0027*time))*thccl)+.05*sin(6.7*time);
per_frame_34=
per_frame_35=wave_r=sqr(sin(cc+.07*time));
per_frame_36=wave_g=sqr(sin(cc+.06*time));
per_frame_37=wave_b=sqr(sin(cc+.05*time));
per_frame_38=ob_r=.5+.5*sin(1.23*time+4*cc+.011*thccl);
per_frame_39=ob_g=.5+.5*sin(1.32*time+7*cc+.012*thccl);
per_frame_40=ob_b=.5+.5*sin(1.17*time+9*cc+.013*thccl);
per_pixel_1=ak=-sin(6*rad+((q1%5)*3)%5*ang+q1)*(1-rad+.2*sin(.54*q1))*above(rad,0);
per_pixel_2=block=if(below(ak,-.15),ak,0);
per_pixel_3=dx=dx+0.005*sin((y*2-1)*48)+0.001*tan((y*2-1)*64)+0.000*tan((ang-3.1415)*8);
per_pixel_4=dy =dy+0.005*sin((x*2-1)*48)+0.001*tan((x*2-1)*64)+0.000*tan((ang-3.1415)*6);
per_pixel_5=//dx=dx+0.008*sin((x-0.5)*48)+0.008*sin((x-0.5)*64);
per_pixel_6=//dy=dy+0.008*cos((y-0.5)*64);
per_pixel_7=dx=if(block,dx,0.008*sin((x-0.5)*48)+0.008*sin((x-0.5)*64));
per_pixel_8=dy=if(block,dy,0.008*cos((y-0.5)*64));
per_pixel_9=
per_pixel_10=zoom = if(block,1,0.97);
