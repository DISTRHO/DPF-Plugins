[preset00]
fRating=1.000000
fGammaAdj=2.000
fDecay=1.000
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=1
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=0.96000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00052
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=0.88026
wavecode_0_smoothing=1.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.200
wave_0_per_point1=u = abs(cos(q1*0.1))*3.14159;
wave_0_per_point2=v = abs(cos(q1*0.015))*3.14159*2;
wave_0_per_point3=s = sample*3.14*100;
wave_0_per_point4=ss = sample*6.28*1000;
wave_0_per_point5=
wave_0_per_point6=//draw
wave_0_per_point7=xs = 0.5*sin(s)*cos(ss)*equal(q5,0) +
wave_0_per_point8=(0.6 + 0.1*cos(s))*cos(ss)*equal(q5,1) +
wave_0_per_point9=0.5*sin(s)*cos(ss)*equal(q5,2);
wave_0_per_point10=ys = 0.5*sin(s)*sin(ss)*equal(q5,0) +
wave_0_per_point11=(0.6 + 0.1*cos(s))*sin(ss)*equal(q5,1) +
wave_0_per_point12=0.5*sin(s)*sin(ss)*equal(q5,2);
wave_0_per_point13=zs = 0.5*cos(s)*equal(q5,0) +
wave_0_per_point14=0.1*sin(s)*equal(q5,1) +
wave_0_per_point15=0.5*sin(s)*equal(q5,2);
wave_0_per_point16=
wave_0_per_point17=
wave_0_per_point18=
wave_0_per_point19=xtor = (0.6 + 0.1*cos(s))*cos(ss);
wave_0_per_point20=ytor = (0.6 + 0.1*cos(s))*sin(ss);
wave_0_per_point21=ztor = 0.1*sin(s);
wave_0_per_point22=
wave_0_per_point23=
wave_0_per_point24=//rotate x axis
wave_0_per_point25=angle = q1*0.3;
wave_0_per_point26=yx = ys*cos(angle) - zs*sin(angle);
wave_0_per_point27=zx = ys*sin(angle) + zs*cos(angle);
wave_0_per_point28=xx = xs;
wave_0_per_point29=
wave_0_per_point30=//rotate y axis
wave_0_per_point31=angle2 = q1*0.5;
wave_0_per_point32=xd = xx*cos(angle2) - zx*sin(angle2);
wave_0_per_point33=zd = xx*sin(angle2) + zx*cos(angle2);
wave_0_per_point34=yd = yx;
wave_0_per_point35=
wave_0_per_point36=//rotaye z axis
wave_0_per_point37=angle3 = q1*0.41;
wave_0_per_point38=xn = xd*cos(angle3) - yd*sin(angle3);
wave_0_per_point39=yn = xd*sin(angle3) + yd*cos(angle3);
wave_0_per_point40=
wave_0_per_point41=zd = zd + 2;
wave_0_per_point42=
wave_0_per_point43=//do that falloff effect
wave_0_per_point44=peek1 = (value1 + value2)*10;
wave_0_per_point45=
wave_0_per_point46=//if sample louder set that to level else decrement level
wave_0_per_point47=level = if(above(peek1,level),peek1,level - 0.00025);
wave_0_per_point48=level = if(below(level,0),0,level);
wave_0_per_point49=
wave_0_per_point50=//add to z
wave_0_per_point51=zd = zd + 2  + level;
wave_0_per_point52=
wave_0_per_point53=
wave_0_per_point54=x = xn*zd*0.05 + 0.5;
wave_0_per_point55=y = yn*zd*0.05*1.2 + 0.5;
wave_0_per_point56=
wave_0_per_point57=
wave_0_per_point58=r = 0.5 + 0.5*sin(q1*1.2 + x + x);
wave_0_per_point59=g = 0.5 + 0.5*sin(q1*1.5 + x + y);
wave_0_per_point60=b = 0.5 + 0.5*sin(q1*1.36 + y + y);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=0.88026
wavecode_1_smoothing=1.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.200
wave_1_per_point1=u = abs(cos(q1*0.1))*3.14159;
wave_1_per_point2=v = abs(cos(q1*0.015))*3.14159*2;
wave_1_per_point3=s = sample*3.14*100;
wave_1_per_point4=ss = sample*6.28*1000;
wave_1_per_point5=
wave_1_per_point6=//draw
wave_1_per_point7=xs = 0.5*sin(s)*cos(ss)*equal(q5,2) +
wave_1_per_point8=(0.6 + 0.1*cos(s))*cos(ss)*equal(q5,0) +
wave_1_per_point9=0.5*sin(s)*cos(ss)*equal(q5,1);
wave_1_per_point10=ys = 0.5*sin(s)*sin(ss)*equal(q5,2) +
wave_1_per_point11=(0.6 + 0.1*cos(s))*sin(ss)*equal(q5,0) +
wave_1_per_point12=0.5*sin(s)*sin(ss)*equal(q5,1);
wave_1_per_point13=zs = 0.5*cos(s)*equal(q5,2) +
wave_1_per_point14=0.1*sin(s)*equal(q5,0) +
wave_1_per_point15=0.5*sin(s)*equal(q5,1);
wave_1_per_point16=
wave_1_per_point17=
wave_1_per_point18=xtor = (0.6 + 0.1*cos(s))*cos(ss);
wave_1_per_point19=ytor = (0.6 + 0.1*cos(s))*sin(ss);
wave_1_per_point20=ztor = 0.1*sin(s);
wave_1_per_point21=
wave_1_per_point22=
wave_1_per_point23=//rotate x axis
wave_1_per_point24=angle = q1*0.3;
wave_1_per_point25=yx = ys*cos(angle) - zs*sin(angle);
wave_1_per_point26=zx = ys*sin(angle) + zs*cos(angle);
wave_1_per_point27=xx = xs;
wave_1_per_point28=
wave_1_per_point29=//rotate y axis
wave_1_per_point30=angle2 = q1*0.5;
wave_1_per_point31=xd = xx*cos(angle2) - zx*sin(angle2);
wave_1_per_point32=zd = xx*sin(angle2) + zx*cos(angle2);
wave_1_per_point33=yd = yx;
wave_1_per_point34=
wave_1_per_point35=//rotaye z axis
wave_1_per_point36=angle3 = q1*0.41;
wave_1_per_point37=xn = xd*cos(angle3) - yd*sin(angle3);
wave_1_per_point38=yn = xd*sin(angle3) + yd*cos(angle3);
wave_1_per_point39=
wave_1_per_point40=zd = zd + 2;
wave_1_per_point41=
wave_1_per_point42=//do that falloff effect
wave_1_per_point43=peek1 = (value1 + value2)*10;
wave_1_per_point44=
wave_1_per_point45=//if sample louder set that to level else decrement level
wave_1_per_point46=level = if(above(peek1,level),peek1,level - 0.00025);
wave_1_per_point47=level = if(below(level,0),0,level);
wave_1_per_point48=
wave_1_per_point49=//add to z
wave_1_per_point50=zd = zd + 2  + level;
wave_1_per_point51=
wave_1_per_point52=
wave_1_per_point53=x = xn*zd*0.05 + 0.5;
wave_1_per_point54=y = yn*zd*0.05*1.2 + 0.5;
wave_1_per_point55=
wave_1_per_point56=
wave_1_per_point57=r = 0.5 + 0.5*sin(q1*1.2 + x + x);
wave_1_per_point58=g = 0.5 + 0.5*sin(q1*1.5 + x + y);
wave_1_per_point59=b = 0.5 + 0.5*sin(q1*1.16 + y + y);
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=0.500
wave_2_per_point1=u = abs(cos(q1*0.1))*3.14159;
wave_2_per_point2=v = abs(cos(q1*0.015))*3.14159*2;
wave_2_per_point3=s = sample*3.14;
wave_2_per_point4=ss = sample*6.28*100;
wave_2_per_point5=
wave_2_per_point6=//draw
wave_2_per_point7=xs = 0.5*sin(s)*cos(ss);
wave_2_per_point8=ys = 0.5*sin(s)*sin(ss);
wave_2_per_point9=zs = 0.5*sin(s);
wave_2_per_point10=
wave_2_per_point11=
wave_2_per_point12=//plot x,y,z to point on circle
wave_2_per_point13=//smp=sample*6.283;
wave_2_per_point14=//xp=sin(smp )*0.30;
wave_2_per_point15=//yp=cos(smp )*0.30;
wave_2_per_point16=//zp=0;
wave_2_per_point17=
wave_2_per_point18=
wave_2_per_point19=//alter shape;
wave_2_per_point20=///angy=sin(sample*6.28*4 +t1 )*6.28;
wave_2_per_point21=//xq=xp*cos(angy) - zp*sin(angy);
wave_2_per_point22=//zq=xp*sin(angy) + zp*cos(angy);
wave_2_per_point23=//xp=xq;
wave_2_per_point24=//zp=zq;
wave_2_per_point25=
wave_2_per_point26=
wave_2_per_point27=
wave_2_per_point28=//rotate on y axis;
wave_2_per_point29=//angy=t1*0.1;
wave_2_per_point30=//xq=xp*cos(angy) - zp*sin(angy);
wave_2_per_point31=//zq=xp*sin(angy) + zp*cos(angy);
wave_2_per_point32=//xp=xq;
wave_2_per_point33=//zp=zq;
wave_2_per_point34=
wave_2_per_point35=//rotate on x axis
wave_2_per_point36=//axs1 = sin(t1*0.15) + 1.6;
wave_2_per_point37=//yq= yp*cos(axs1) - zp*sin(axs1);
wave_2_per_point38=//zq= yp*sin(axs1) + zp*cos(axs1);
wave_2_per_point39=//yp=yq;
wave_2_per_point40=//zp=zq;
wave_2_per_point41=
wave_2_per_point42=//rotate on y axis again
wave_2_per_point43=//axs2 = sin(t1*0.1)*3.3;
wave_2_per_point44=//xq=xp*cos(axs2) - zp*sin(axs2);
wave_2_per_point45=//zq=xp*sin(axs2) + zp*cos(axs2);
wave_2_per_point46=//xp=xq;
wave_2_per_point47=//zp=zq;
wave_2_per_point48=
wave_2_per_point49=
wave_2_per_point50=
wave_2_per_point51=
wave_2_per_point52=//rotate x axis
wave_2_per_point53=angle = sin(q1*0.15 + 3.14);
wave_2_per_point54=yx = ys*cos(angle) - zs*sin(angle);
wave_2_per_point55=zx = ys*sin(angle) + zs*cos(angle);
wave_2_per_point56=xx = xs;
wave_2_per_point57=
wave_2_per_point58=//rotate y axis
wave_2_per_point59=angle2 = sin(q1*0.2 + 3.14);
wave_2_per_point60=xd = xx*cos(angle2) - zx*sin(angle2);
wave_2_per_point61=zd = xx*sin(angle2) + zx*cos(angle2);
wave_2_per_point62=yd = yx;
wave_2_per_point63=
wave_2_per_point64=zd = zd + 2;
wave_2_per_point65=
wave_2_per_point66=x = xd*zd*0.3*1.2 + 0.5;
wave_2_per_point67=y = yd*zd*0.3*1.2 + 0.5;
wave_2_per_point68=
wave_2_per_point69=
wave_2_per_point70=r = 0.5 + 0.5*sin(q1*1.2 + x + x);
wave_2_per_point71=g = 0.5 + 0.5*sin(q1*1.5 + x + y);
wave_2_per_point72=b = 0.5 + 0.5*sin(q1*1.36 + y + y);
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=0.500
wave_3_per_point1=u = abs(cos(q1*0.1))*3.14159;
wave_3_per_point2=v = abs(cos(q1*0.015))*3.14159*2;
wave_3_per_point3=s = sample*20;
wave_3_per_point4=
wave_3_per_point5=//draw
wave_3_per_point6=xs = 0.5*sin(s)*cos(s*v);
wave_3_per_point7=ys = 0.5*sin(s)*sin(s*v);
wave_3_per_point8=zs = 0.5*sin(u);
wave_3_per_point9=
wave_3_per_point10=
wave_3_per_point11=//plot x,y,z to point on circle
wave_3_per_point12=//smp=sample*6.283;
wave_3_per_point13=//xp=sin(smp )*0.30;
wave_3_per_point14=//yp=cos(smp )*0.30;
wave_3_per_point15=//zp=0;
wave_3_per_point16=
wave_3_per_point17=
wave_3_per_point18=//alter shape;
wave_3_per_point19=///angy=sin(sample*6.28*4 +t1 )*6.28;
wave_3_per_point20=//xq=xp*cos(angy) - zp*sin(angy);
wave_3_per_point21=//zq=xp*sin(angy) + zp*cos(angy);
wave_3_per_point22=//xp=xq;
wave_3_per_point23=//zp=zq;
wave_3_per_point24=
wave_3_per_point25=
wave_3_per_point26=
wave_3_per_point27=//rotate on y axis;
wave_3_per_point28=//angy=t1*0.1;
wave_3_per_point29=//xq=xp*cos(angy) - zp*sin(angy);
wave_3_per_point30=//zq=xp*sin(angy) + zp*cos(angy);
wave_3_per_point31=//xp=xq;
wave_3_per_point32=//zp=zq;
wave_3_per_point33=
wave_3_per_point34=//rotate on x axis
wave_3_per_point35=//axs1 = sin(t1*0.15) + 1.6;
wave_3_per_point36=//yq= yp*cos(axs1) - zp*sin(axs1);
wave_3_per_point37=//zq= yp*sin(axs1) + zp*cos(axs1);
wave_3_per_point38=//yp=yq;
wave_3_per_point39=//zp=zq;
wave_3_per_point40=
wave_3_per_point41=//rotate on y axis again
wave_3_per_point42=//axs2 = sin(t1*0.1)*3.3;
wave_3_per_point43=//xq=xp*cos(axs2) - zp*sin(axs2);
wave_3_per_point44=//zq=xp*sin(axs2) + zp*cos(axs2);
wave_3_per_point45=//xp=xq;
wave_3_per_point46=//zp=zq;
wave_3_per_point47=
wave_3_per_point48=
wave_3_per_point49=
wave_3_per_point50=
wave_3_per_point51=//rotate x axis
wave_3_per_point52=angle = sin(q1*0.15 - 1.57);
wave_3_per_point53=yx = ys*cos(angle) - zs*sin(angle);
wave_3_per_point54=zx = ys*sin(angle) + zs*cos(angle);
wave_3_per_point55=xx = xs;
wave_3_per_point56=
wave_3_per_point57=//rotate y axis
wave_3_per_point58=//angle2 = sin(q1*0.2 - 1.57);
wave_3_per_point59=xd = xx*cos(angle2) - zx*sin(angle2);
wave_3_per_point60=zd = xx*sin(angle2) + zx*cos(angle2);
wave_3_per_point61=yd = yx;
wave_3_per_point62=
wave_3_per_point63=
wave_3_per_point64=x = xd*zd + 0.5;
wave_3_per_point65=y = yd*zd + 0.5;
wave_3_per_point66=
wave_3_per_point67=
wave_3_per_point68=r = 0.5 + 0.5*sin(q1*1.2 + x + x);
wave_3_per_point69=g = 0.5 + 0.5*sin(q1*1.5 + x + y);
wave_3_per_point70=b = 0.5 + 0.5*sin(q1*1.36 + y + y);
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=2.66717
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.400
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.400
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=r = sin(q1);
shape_0_per_frame2=g = sin(q1*1.1);
shape_0_per_frame3=b = sin(q1*1.4);
shape_0_per_frame4=r2 = sin(q1*1.25);
shape_0_per_frame5=g2 = sin(q1*1.45);
shape_0_per_frame6=b2 = sin(q1*1.12);
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=basstime = basstime + bass*0.03;
per_frame_2=q1 = basstime;
per_frame_3=
per_frame_4=basstime = basstime + bass_att*0.03;
per_frame_5=vol = pow(bass+mid+treb,2);
per_frame_6=basssum = vol;
per_frame_7=
per_frame_8=stickybit = time%2;
per_frame_9=
per_frame_10=//avg vol
per_frame_11=//buffer 1
per_frame_12=volAvg = volAvg + vol*equal(stickybit,1);
per_frame_13=//number of samples 1 or framerate
per_frame_14=sample1 = sample1 + equal(stickybit,1);
per_frame_15=//buffer 2
per_frame_16=volAvg2 = volAvg2 + vol*equal(stickybit,0);
per_frame_17=//number of samples 2
per_frame_18=sample2 = sample2 + equal(stickybit,0);
per_frame_19=
per_frame_20=//transision
per_frame_21=edge = bnot(equal(bit2,stickybit));
per_frame_22=
per_frame_23=volAvg = volAvg - volAvg*edge*stickybit;
per_frame_24=volAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);
per_frame_25=
per_frame_26=sample1 = sample1  - sample1*edge*stickybit;
per_frame_27=sample2 = sample2  - sample2*edge*equal(stickybit,0);
per_frame_28=
per_frame_29=//test vol against avg buffer lvl
per_frame_30=diff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);
per_frame_31=diff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);
per_frame_32=
per_frame_33=q3 = diff;
per_frame_34=
per_frame_35=bit2 = time%2;
per_frame_36=
per_frame_37=difftime = difftime + diff*0.03;
per_frame_38=q2 = difftime;
per_frame_39=
per_frame_40=state = state +  above(diff,5);
per_frame_41=state = if(above(state,2),0,state);
per_frame_42=monitor = state;
per_frame_43=
per_frame_44=q5 = state;
per_frame_45=
per_frame_46=//fix a strange error
per_frame_47=difftime = if(above(difftime,2000),0, difftime);
per_frame_48=
per_frame_49=rarr = rand(100)*0.01;
per_frame_50=
per_frame_51=decay_r = 0.6 + 0.2*(abs(sin(diff+rarr)));
per_frame_52=decay_g = 0.6 + 0.25*(abs(cos(diff+rarr)));
per_frame_53=decay_b = 0.6 + 0.30*(abs(atan(diff+rarr)));
per_frame_54=
per_frame_55=//shape fill
per_pixel_1=zoom = 1 + 0.05*q3;
per_pixel_2=zoom = 1;
