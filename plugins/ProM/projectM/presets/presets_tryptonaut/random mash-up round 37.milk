MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.925
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.060
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.050
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_frame1=t1=samples;
wave_0_per_frame2=assign( gmegabuf(0), samples );
wave_0_per_frame3=
wave_0_per_point1=x=sample;
wave_0_per_point2=y=value1*.5+.2;
wave_0_per_point3=
wave_0_per_point4=
wave_0_per_point5=//t1 is "samples"
wave_0_per_point6=//add one to leave a spot for the number of samples
wave_0_per_point7=assign(gmegabuf( t1 * sample + 1 ), value1);
wave_0_per_point8=
wave_0_per_point9=r=sin(q1*.75-value2);
wave_0_per_point10=g=sin(q1*.25+value1);
wave_0_per_point11=b=sin(q1);
wave_0_per_point12=a=0;
wavecode_1_enabled=0
wavecode_1_samples=256
wavecode_1_sep=256
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=x=value1*.1+.5;
wave_1_per_point2=y=value2*.1+.5;
wave_1_per_point3=
wave_1_per_point4=r=sin(q4+(q5-value1))*.5+.5;
wave_1_per_point5=g=sin(q4-(q5*value2))*.5+.5;
wave_1_per_point6=b=sin(q5-(q4*value1))*.5+.5;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.26249
shapecode_0_ang=2.95310
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.70721
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.400
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=rad=.25*q20;
shape_0_per_frame2=
shape_0_per_frame3=x=.2;
shape_0_per_frame4=y=.2;
shape_0_per_frame5=
shape_0_per_frame6=
shape_0_per_frame7=ang=0;
shape_0_per_frame8=sides=4;
shape_0_per_frame9=r=1;
shape_0_per_frame10=g=1;
shape_0_per_frame11=b=1;
shape_0_per_frame12=a=1;
shape_0_per_frame13=r2=r;
shape_0_per_frame14=g2=g;
shape_0_per_frame15=b2=b;
shape_0_per_frame16=a2=a;
shape_0_per_frame17=border_r=0;
shape_0_per_frame18=border_g=0;
shape_0_per_frame19=border_b=0;
shape_0_per_frame20=border_a=0;
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.61774
shapecode_1_ang=0.00000
shapecode_1_tex_ang=3.14159
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.300
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=rad=.25*q1;
shape_1_per_frame2=
shape_1_per_frame3=x=.7;
shape_1_per_frame4=y=.2;
shape_1_per_frame5=
shape_1_per_frame6=
shape_1_per_frame7=ang=0;
shape_1_per_frame8=sides=4;
shape_1_per_frame9=r=1;
shape_1_per_frame10=g=1;
shape_1_per_frame11=b=1;
shape_1_per_frame12=a=1;
shape_1_per_frame13=r2=r;
shape_1_per_frame14=g2=g;
shape_1_per_frame15=b2=b;
shape_1_per_frame16=a2=a;
shape_1_per_frame17=border_r=0;
shape_1_per_frame18=border_g=0;
shape_1_per_frame19=border_b=0;
shape_1_per_frame20=border_a=0;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=rad=.25*q21;
shape_2_per_frame2=
shape_2_per_frame3=x=.2;
shape_2_per_frame4=y=.7;
shape_2_per_frame5=
shape_2_per_frame6=
shape_2_per_frame7=ang=0;
shape_2_per_frame8=sides=4;
shape_2_per_frame9=r=1;
shape_2_per_frame10=g=1;
shape_2_per_frame11=b=1;
shape_2_per_frame12=a=1;
shape_2_per_frame13=r2=r;
shape_2_per_frame14=g2=g;
shape_2_per_frame15=b2=b;
shape_2_per_frame16=a2=a;
shape_2_per_frame17=border_r=0;
shape_2_per_frame18=border_g=0;
shape_2_per_frame19=border_b=0;
shape_2_per_frame20=border_a=0;
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
shape_3_per_frame1=rad=.25*q2;
shape_3_per_frame2=
shape_3_per_frame3=x=.7;
shape_3_per_frame4=y=.7;
shape_3_per_frame5=
shape_3_per_frame6=
shape_3_per_frame7=ang=0;
shape_3_per_frame8=sides=4;
shape_3_per_frame9=r=1;
shape_3_per_frame10=g=1;
shape_3_per_frame11=b=1;
shape_3_per_frame12=a=1;
shape_3_per_frame13=r2=r;
shape_3_per_frame14=g2=g;
shape_3_per_frame15=b2=b;
shape_3_per_frame16=a2=a;
shape_3_per_frame17=border_r=0;
shape_3_per_frame18=border_g=0;
shape_3_per_frame19=border_b=0;
shape_3_per_frame20=border_a=0;
per_frame_init_1=
per_frame_init_2=avgdbass=0.01;
per_frame_init_3=avgdtreb=0.01;
per_frame_init_4=
per_frame_init_5=last_raw_bass = .1;
per_frame_init_6=last_raw_treb = .1;
per_frame_init_7=
per_frame_init_8=
per_frame_init_9=avgbr=0.7;
per_frame_init_10=avgbr2=0.7;
per_frame_init_11=beatb=0;
per_frame_init_12=beatb2=0;
per_frame_init_13=lbt2=time;
per_frame_init_14=lbt=time;
per_frame_init_15=ph=0;
per_frame_init_16=phase=0;
per_frame_init_17=bool=0;
per_frame_init_18=const=.01;
per_frame_init_19=ph2=0;
per_frame_init_20=phase2=0;
per_frame_init_21=bool2=0;
per_frame_init_22=const2=.01;
per_frame_init_23=
per_frame_init_24=mtime=100+bass_att*1000;
per_frame_init_25=mtime2=100+treb_att*1000;
per_frame_init_26=
per_frame_1=num_samples=gmegabuf(0);
per_frame_2=num_slices = 4;
per_frame_3=slice_size = num_samples/num_slices;
per_frame_4=raw_bass = 0;
per_frame_5=raw_treb = 0;
per_frame_6=i=0;
per_frame_7=loop(slice_size,
per_frame_8= exec3(
per_frame_9=  raw_bass = raw_bass + gmegabuf(i+1+slice_size*.3),
per_frame_10=  raw_treb = raw_treb + gmegabuf(i+1+slice_size*(num_slices*.7)),
per_frame_11=  i=i+1
per_frame_12= )
per_frame_13=);
per_frame_14=raw_bass = raw_bass * 30/fps;
per_frame_15=raw_treb = raw_treb * 30/fps;
per_frame_16=
per_frame_17=raw_bass = raw_bass/num_samples;
per_frame_18=raw_treb = raw_treb/num_samples;
per_frame_19=
per_frame_20=dbass = raw_bass - last_raw_bass;
per_frame_21=dtreb = raw_treb - last_raw_treb;
per_frame_22=
per_frame_23=
per_frame_24=avgdbass=avgdbass*.99+abs(dbass)*.01;
per_frame_25=avgdtreb=avgdtreb*.99+abs(dtreb)*.01;
per_frame_26=
per_frame_27=last_raw_bass = raw_bass;
per_frame_28=last_raw_treb = raw_treb;
per_frame_29=
per_frame_30=is_beat = above(abs(dbass), avgdbass*2);
per_frame_31=is_beat = is_beat * above(time-lbt,avgbr*.5);
per_frame_32=beatb = is_beat;
per_frame_33=
per_frame_34=
per_frame_35=is_beat = above(abs(dtreb), avgdtreb*2);
per_frame_36=is_beat = is_beat * above(time-lbt2,avgbr2*.5);
per_frame_37=monitor = raw_treb;
per_frame_38=beatb2 = is_beat;
per_frame_39=
per_frame_40=
per_frame_41=//beatrate calc
per_frame_42=avgbr=beatb*(avgbr*.9+(time-lbt)*.1)+(1-beatb)*max(avgbr+(1/avgbr)*.0001,0); // avg beat rate
per_frame_43=avgbr2=beatb2*(avgbr2*.9+(time-lbt2)*.1)+(1-beatb2)*max(avgbr2+(1/avgbr2)*.00001,0);
per_frame_44=
per_frame_45=lbt=time*beatb+(1-beatb)*lbt; //last beat time
per_frame_46=lbt2=time*beatb2+(1-beatb2)*lbt2;
per_frame_47=
per_frame_48=
per_frame_49=ph=(time-lbt)*(60/avgbr)*const;
per_frame_50=phase=max(min( ph, 1 ),0);
per_frame_51=const=const*(1-beatb)+beatb*( const+ (.002*bool) );
per_frame_52=bool=below(phase,.98)*(.98-ph)-above(phase,.98)*(ph*.5);
per_frame_53=
per_frame_54=ph2=(time-lbt2)*(60/avgbr2)*const2;
per_frame_55=phase2=max(min( ph2, 1 ),0);
per_frame_56=const2=const2*(1-beatb2)+beatb2*( const2+ (.002*bool2) );
per_frame_57=bool2=below(phase2,.98)*(.98-ph2)-above(phase2,.98)*(ph2*.5);
per_frame_58=
per_frame_59=
per_frame_60=
per_frame_61=bc=bc+beatb;
per_frame_62=bc2=bc2+beatb2;
per_frame_63=
per_frame_64=mtime=mtime+( (avgdbass*(60/avgbr))*(1+beatb) )*(1/fps);
per_frame_65=mtime2=mtime2+( (avgdtreb*(60/avgbr2))*(1+beatb2) )*(1/fps);
per_frame_66=q1=1-phase;
per_frame_67=q2=1-phase2;
per_frame_68=q3=bc;
per_frame_69=q4=bc2;
per_frame_70=
per_frame_71=
per_frame_72=
per_frame_73=q5=mtime;
per_frame_74=q6=mtime2;
per_frame_75=q7=sin(mtime)*.5+.5;
per_frame_76=q8=sin(mtime2)*.5+.5;
per_frame_77=q9=sin(mtime*.1)*.5+.5;
per_frame_78=q10=sin(mtime2*.1)*.5+.5;
per_frame_79=q11=avgdbass;
per_frame_80=q12=avgdtreb;
per_frame_81=
per_frame_82=q14=60/avgbr;
per_frame_83=q15=60/avgbr2;
per_frame_84=monitor = q14+floor(q15) *100000;
per_frame_85=monitor = avgbr + floor(q14) * 100;
per_frame_86=q20=beatb;
per_frame_87=q21=beatb2;
per_frame_88=q22=bc%4;
per_frame_89=q23=bc2%4;
per_frame_90=//monitor=bc;
per_frame_91=
per_frame_92=warp=0;
per_frame_93=wrap=1;
per_frame_94=zoom=1;
per_frame_95=
per_frame_96=s=0.8+q20+q21;
per_frame_97=ob_r=sin((mtime*1.2-mtime2*1.3)*s)*.5+.5;
per_frame_98=ob_g=sin((mtime*0.9+mtime2*1.4)*s)*.5+.5;
per_frame_99=ob_b=sin((mtime2*1.5-mtime*0.8)*s)*.5+.5;
per_frame_100=ob_a = min(1+(beatb+beatb2)+0.001,1);
per_frame_101=//ob_r=ob_g=ob_b=1;
per_frame_102=
per_frame_103=bb = bb*0.99 + bass*0.02;
per_frame_104=mm = mm*0.99 + mid*0.02;
per_frame_105=tt = tt*0.99 + treb*0.02;
per_frame_106=
per_frame_107=mx = max(max(bb,mm),tt);
per_frame_108=mn = min(min(bb,mm),tt);
per_frame_109=
per_frame_110=h1 = (bb-mn)/(mx-mn);
per_frame_111=h2 = (mm-mn)/(mx-mn);
per_frame_112=h3 = (tt-mn)/(mx-mn);
per_frame_113=
per_frame_114=v = 0.1333/fps;
per_frame_115=bm = bm + (h1-h2)*v;
per_frame_116=mt = mt + (h2-h3)*v;
per_frame_117=bt = bt + (h1-h3)*v;
per_frame_118=
per_frame_119=w = bm*2;
per_frame_120=q3 = sin(w);
per_frame_121=q4 = cos(w);
per_frame_122=
per_frame_123=
per_frame_124=q10 = bm;
per_frame_125=q11 = mt;
per_frame_126=q12 = bt;
per_pixel_1=//rot=(q2-q1);
warp_1=`float2 factorA, factorB, product;
warp_2=`float2 numerator, denominator, fraction;
warp_3=`float2 moebius;
warp_4=`float2 julia, julia_c, julia_zoom;
warp_5=`float2 dither_uv;
warp_6=`float3 rand;
warp_7=`float2 d, d_uv;
warp_8=`float3 dx, dy;
warp_9=`
warp_10=`shader_body
warp_11=`{
warp_12=`
warp_13=`// moebius transformation code
warp_14=`
warp_15=`   moebius = (uv_orig-0.5)*aspect.xy;
warp_16=`   factorA = moebius;
warp_17=`   factorB = float2(q11,q12);
warp_18=`   product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
warp_19=`                     factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
warp_20=`   numerator = product + float2(q13,q14);
warp_21=`   factorA = moebius;
warp_22=`   factorB = float2(q15,q16);
warp_23=`   product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
warp_24=`                     factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
warp_25=`   denominator = product + float2(q17,q18);
warp_26=`   fraction = float2( numerator.x*denominator.x + numerator.y*denominator.y,   // the fractions real part
warp_27=`                      numerator.y*denominator.x - numerator.x*denominator.y)/  // the fractions imaginary part
warp_28=`                      (denominator.x*denominator.x + denominator.y*denominator.y);
warp_29=`   moebius = fraction*0.5;
warp_30=`   moebius = 0.5 + (1.0 - abs( frac( moebius * 0.5 ) * 2 - 1.0 )-0.5);
warp_31=`
warp_32=`// julia fractal code
warp_33=`
warp_34=`   julia_zoom =1.81;
warp_35=`   julia_c = float2(0.45,0.7);
warp_36=`   factorA = (uv-0.5)*julia_zoom;
warp_37=`   factorB = factorA;
warp_38=`   product = float2( factorA.x*factorB.x - factorA.y*factorB.y,   // the products real part
warp_39=`                     factorA.x*factorB.y + factorA.y*factorB.x);  // the products imaginary part
warp_40=`   julia = saturate(product + julia_c);
warp_41=`
warp_42=`// reaction diffusion code
warp_43=`
warp_44=`   d = texsize.zw*4;
warp_45=`   d_uv = uv_orig;
warp_46=`   dx = GetBlur1(d_uv + float2(1,0)*d) - GetBlur1(d_uv - float2(1,0)*d);
warp_47=`   dy = GetBlur1(d_uv + float2(0,1)*d) - GetBlur1(d_uv - float2(0,1)*d);
warp_48=`   d_uv -= float2(dx.x,dy.x)*texsize.zw*4;
warp_49=`
warp_50=`
warp_51=`ret.x = GetPixel(d_uv).x;
warp_52=`ret.x += -(GetBlur1(d_uv).x-ret.x)*0.1 - 0.06;
warp_53=`ret.x += (1-GetBlur1(moebius).x)*0.1;
warp_54=`
warp_55=`ret.z = GetPixel(julia).z + 0.004;
warp_56=`
warp_57=`ret.y = GetPixel(moebius-float2(dx.x,dy.x)*texsize.zw*24).x;
warp_58=`}
comp_1=`float2 complex_div(float2 numerator, float2 denominator){
comp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_5=`}
comp_6=`
comp_7=`float2 uv_polar(float2 domain, float2 center){
comp_8=`   float2 c = domain - center;
comp_9=`   float rad_hq = length(c);
comp_10=`   float ang_hq = atan2(c.x,c.y);
comp_11=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
comp_12=`}
comp_13=`
comp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_15=`   float2 polar = uv_polar(domain, center);
comp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_17=`}
comp_18=`
comp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_21=`}
comp_22=`
comp_23=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
comp_26=`}
comp_27=`
comp_28=`
comp_29=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
comp_30=`   float2 uv_r = (domain-center);
comp_31=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
comp_32=`}
comp_33=`
comp_34=`
comp_35=`shader_body
comp_36=`{
comp_37=`float2 uvo = uv;
comp_38=`
comp_39=`float2 rotate_uv = 0.5-uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);
comp_40=`float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.3, float2(q11,q12));
comp_41=`uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));
comp_42=`
comp_43=`float2 uv1 = uv-.5;
comp_44=`
comp_45=`float3 ret1 = tex2D(sampler_main, uv) * (1-rad);
comp_46=`
comp_47=`
comp_48=`float2 hor = float2 (texsize.z,0);
comp_49=`float2 ver = float2 (0,texsize.w);
comp_50=`float dx = GetPixel (uv-hor) - GetPixel (uv+hor);
comp_51=`float dy = GetPixel (uv-ver) - GetPixel (uv+ver);
comp_52=`float2 dz = float2 (dx,dy);
comp_53=`
comp_54=`uv1 = uv1*0+.3*cos(uv1*2) - dz;;
comp_55=`float dots = saturate(.04/length(uv1));
comp_56=`uv1 = uv1*0+.3*cos(uv1*12) - 9*dz;;
comp_57=`float3 dots2 = saturate(.04/length(uv1));
comp_58=`
comp_59=`
comp_60=`ret = dots + GetPixel(uv)*12*dots2;
comp_61=`//ret = GetPixel(uv);
comp_62=`}
